{"version":3,"sources":["components/Footer.js","components/Navbar.js","components/About.js","components/TextForm.js","components/Alert.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","className","creatername","Navbar","mode","to","style","color","fontWeight","fontSize","title","type","id","about","onClick","togglemode","role","htmlFor","About","mystyledark2","backgroundColor","TextDecoderation","mystyleLight2","background","TextForm","useState","text","setText","styledark","stylelight","style2dark","style2light","heading","rows","value","onChange","event","target","disabled","length","newUppertext","toUpperCase","showAlert","newLowertext","toLowerCase","copyText","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","summaryHead","filter","element","alert","Alert","word","lower","charAt","slice","capatalize","msg","Contact","mystyle","mystyle2","href","defaultProps","App","setMode","setAlert","message","setTimeout","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8LAEe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAU,SAAf,SACI,oBAAGA,UAAU,cAAb,uDAAsED,EAAME,iB,WCDzE,SAASC,EAAOH,GAO7B,OACE,qBACEC,UAAS,yCAAoCD,EAAMI,KAA1C,eAAqDJ,EAAMI,MADtE,SAGE,sBAAKH,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeI,GAAG,IAAIC,MAVzB,CACjBC,MAAO,YACPC,WAAY,MACZC,SAAU,QAON,SACGT,EAAMU,QAET,wBACET,UAAU,iBACVU,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMV,UAAU,0BAGlB,sBAAKA,UAAU,2BAA2BW,GAAG,yBAA7C,UACE,qBAAIX,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOI,GAAG,IAAzD,oBAIF,oBAAIJ,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,SAA9B,SACGL,EAAMa,UAGX,oBAAIZ,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWI,GAAG,WAA9B,0BAkBJ,sBAAKJ,UAAS,sCAAgD,UAAfD,EAAMI,KAAmB,OAAS,SAAjF,UACE,uBAAOH,UAAU,mBAAmBU,KAAK,WAAWG,QAASd,EAAMe,WAAYC,KAAK,SAASJ,GAAG,2BAChG,wBAAOX,UAAU,mBAAmBgB,QAAQ,yBAA5C,oBAA4F,UAAfjB,EAAMI,KAAmB,OAAS,QAA/G,sBC9DG,SAASc,EAAMlB,GAK1B,IAKImB,EAAe,CACfZ,MAAO,OACPa,gBAAiB,OACjBC,iBAAkB,OAClBb,WAAY,QAWZc,EAAgB,CAChBf,MAAO,OACPa,gBAAiB,OACjBC,iBAAkB,OAClBb,WAAY,OAIhB,OACI,sBAAKP,UAAU,YAAYW,GAAG,OAAON,MAAsB,SAAfN,EAAMI,KA7BnC,CACfG,MAAO,OACPa,gBAAiB,eAYD,CAChBb,MAAO,OACPgB,WAAY,eAaZ,UACI,oBAAItB,UAAU,cAAd,uBACA,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAYW,GAAG,mBAA9B,UAEI,sBAAKX,UAAU,iBAAiBK,MAAsB,SAAfN,EAAMI,KAAkBe,EAAeG,EAA9E,UACI,oBAAIrB,UAAU,mBAAmBW,GAAG,aAApC,SACI,wBAAQN,MAAsB,SAAfN,EAAMI,KAAkBe,EAAeG,EAAerB,UAAU,mBAAmBU,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAAcC,GAAG,MAA5N,iCAIJ,qBAAKA,GAAG,cAAcX,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACI,qBAAKA,UAAU,iBAAf,SACI,kPAQZ,sBAAKA,UAAU,iBAAiBK,MAAsB,SAAfN,EAAMI,KAAkBe,EAAeG,EAA9E,UACI,oBAAIrB,UAAU,mBAAmBW,GAAG,aAApC,SACI,wBAAQN,MAAsB,SAAfN,EAAMI,KAAkBe,EAAeG,EAAerB,UAAU,mBAAmBU,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAAcC,GAAG,MAA5N,2BAIJ,qBAAKA,GAAG,cAAcX,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACI,qBAAKA,UAAU,iBAAf,SACI,ySAQZ,sBAAKA,UAAU,iBAAiBK,MAAsB,SAAfN,EAAMI,KAAkBe,EAAeG,EAA9E,UACI,oBAAIrB,UAAU,mBAAmBW,GAAG,aAApC,SACI,wBAAQN,MAAsB,SAAfN,EAAMI,KAAkBe,EAAeG,EAAerB,UAAU,mBAAmBU,KAAK,SAAS,iBAAe,WAAW,iBAAe,eAAe,gBAAc,OAAO,gBAAc,cAAcC,GAAG,MAA5N,kCAIJ,qBAAKA,GAAG,cAAcX,UAAU,mCAAmC,kBAAgB,aAAa,iBAAe,oBAA/G,SACI,qBAAKA,UAAU,iBAAf,SACI,uKC/EjB,SAASuB,EAASxB,GAE/B,MAAwByB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAwEIC,EAAY,CACdrB,MAAO,OACPa,gBAAiB,UACjBZ,WAAY,MACZC,SAAU,QAGRoB,EAAa,CACftB,MAAO,OACPa,gBAAiB,OACjBZ,WAAY,MACZC,SAAU,QAGRqB,EAAa,CACfvB,MAAO,QAGLwB,EAAc,CAChBxB,MAAO,QAWT,OAGE,sBAAKN,UAAU,OAAf,UAEE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,cAAcK,MAAsB,SAAfN,EAAMI,KAAkB0B,EAAaC,EAAxE,SAAsF/B,EAAMgC,UAC5F,sBAAK/B,UAAU,YAAf,UACE,uBAAOgB,QAAQ,OAAOhB,UAAU,aAAhC,SACE,mBAAGA,UAAU,QAAQK,MAAsB,SAAfN,EAAMI,KAAkB0B,EAAaC,EAAjE,qCAEF,0BACE9B,UAAU,eACVW,GAAG,OACHqB,KAAK,IACL3B,MAAsB,SAAfN,EAAMI,KAAkBwB,EAAYC,EAC3CK,MAAOR,EACPS,SArHa,SAACC,GAEtBT,EAAQS,EAAMC,OAAOH,aAsHjB,wBAAQI,SAA0B,IAAhBZ,EAAKa,OAActC,UAAU,4BAA4Ba,QAnH1D,WACrB,GAAa,KAATY,EAAa,CACf,IAAIc,EAAed,EAAKe,cACxBd,EAAQa,GACRxC,EAAM0C,UAAU,yBAA0B,gBAG1C1C,EAAM0C,UAAU,4CAA6C,YA4G3D,+BACA,wBAAQJ,SAA0B,IAAhBZ,EAAKa,OAActC,UAAU,4BAA4Ba,QAzG1D,WAErB,GAAa,KAATY,EAAa,CACf,IAAIiB,EAAejB,EAAKkB,cACxBjB,EAAQgB,GACR3C,EAAM0C,UAAU,yBAA0B,gBAG1C1C,EAAM0C,UAAU,4CAA6C,YAiG3D,+BACA,wBAAQJ,SAA0B,IAAhBZ,EAAKa,OAActC,UAAU,4BAA4Ba,QA7F7D,WAElB,GAAa,KAATY,EAAa,CAEfC,EADgB,IAEhB3B,EAAM0C,UAAU,yBAA0B,eAG1C1C,EAAM0C,UAAU,wCAAyC,YAqFvD,wBACA,wBAAQJ,SAA0B,IAAhBZ,EAAKa,OAActC,UAAU,4BAA4Ba,QA9EtD,WACzB,GAAa,KAATY,EAAa,CACf,IAAImB,EAAWC,SAASC,eAAe,QACvCF,EAASG,SACTC,UAAUC,UAAUC,UAAUN,EAASX,OACvClC,EAAM0C,UAAU,qBAAuBG,EAASX,MAAO,gBAGvDlC,EAAM0C,UAAU,uCAAwC,YAsEtD,+BACA,wBAAQJ,SAA0B,IAAhBZ,EAAKa,OAActC,UAAU,4BAA4Ba,QAlEvD,WACxB,GAAa,KAATY,EAAa,CACf,IAAI0B,EAAU1B,EAAK2B,MAAM,QACzB1B,EAAQyB,EAAQE,KAAK,MACrBtD,EAAM0C,UAAU,+BAAgC,gBAGhD1C,EAAM0C,UAAU,6CAA8C,YA2D5D,oCAGF,sBAAKzC,UAAU,kBAAkBK,MAAsB,SAAfN,EAAMI,KAAkB0B,EAAaC,EAA7E,UACE,6BAAK/B,EAAMuD,cACX,mDAAsB7B,EAAK2B,MAAM,KAAKG,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQlB,UAAgBA,UAC3F,wDAA2Bb,EAAKa,UAChC,+CAAkB,KAASb,EAAK2B,MAAM,KAAKG,QAAO,SAACC,GAAc,OAA0B,IAAnBA,EAAQlB,UAAgBA,UAChG,oBAAItC,UAAU,cAAd,8BACA,qBAAKA,UAAU,UAAf,SACE,0BACEA,UAAU,eACVW,GAAG,OACHqB,KAAK,IACLC,MAAOR,EACPpB,MAAsB,SAAfN,EAAMI,KAAkBwB,EAAYC,EAC3CM,SAnGkB,WAC1BuB,MAAM,qCC9CK,SAASC,EAAM3D,GAK5B,OAGE,aADA,CACA,OAAKC,UAAU,WAAf,SACGD,EAAM0D,OAAS,sBAAKzD,UAAS,sBAAiBD,EAAM0D,MAAM/C,KAA7B,gCAAiEK,KAAK,QAApF,UACd,mCATa,SAAC4C,GAClB,IAAMC,EAAQD,EAAKhB,cACnB,OAAOiB,EAAMC,OAAO,GAAGrB,cAAgBoB,EAAME,MAAM,GAOtCC,CAAWhE,EAAM0D,MAAM/C,MAAhC,OADc,KACqCX,EAAM0D,MAAMO,SCVxD,SAASC,EAAQlE,GAC5B,IAAImE,EAAU,CACV5D,MAAO,QAEP6D,EAAW,CACX7D,MAAO,QAEX,OACI,qBAAKN,UAAU,OAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,cAAcK,MAAsB,SAAfN,EAAMI,KAAkB+D,EAAUC,EAArE,wBACA,qBAAKnE,UAAU,mBAAf,SACI,oBAAGK,MAAsB,SAAfN,EAAMI,KAAkB+D,EAAUC,EAA5C,4EACmE,uBAC/D,mBAAGC,KAAK,uCAAR,mBAFJ,IAGI,mBAAGA,KAAK,kCAAR,8BJiExBlE,EAAOmE,aAAe,CACpB5D,MAAO,YACPG,MAAO,Y,WKHM0D,MAvEf,WACE,MAAwB9C,mBAAS,SAAjC,mBAAOrB,EAAP,KAAaoE,EAAb,KAEA,EAA0B/C,mBAAS,MAAnC,mBAAOiC,EAAP,KAAce,EAAd,KAEM/B,EAAY,SAACgC,EAAS/D,GAE1B8D,EAAS,CACPR,IAAKS,EACL/D,KAAMA,IAKRgE,YAAW,WACTF,EAAS,QACR,OA2BL,OACE,mCACE,eAAC,IAAD,WACE,cAACtE,EAAD,CACEO,MAAM,gBACNG,MAAM,WACNT,KAAMA,EACNW,WA/BW,WACJ,SAATX,GACFoE,EAAQ,SACR1B,SAAS8B,KAAKtE,MAAMiB,WAClB,yEACFmB,EAAU,8BAA+B,aAGzC8B,EAAQ,QACR1B,SAAS8B,KAAKtE,MAAMiB,WAClB,mEACFmB,EAAU,6BAA8B,eAsBtC,cAACiB,EAAD,CAAOD,MAAOA,IACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,SAASpB,QAAU,cAACvC,EAAD,CAAOd,KAAMA,MAC5C,cAAC,IAAD,CAAOyE,KAAK,WAAWpB,QAAW,cAACS,EAAD,CAAS9D,KAAMA,MAEjD,cAAC,IAAD,CAAOyE,KAAK,IAAIpB,QAAS,cAACjC,EAAD,CACrBQ,QAAQ,uEACRuB,YAAY,uBACZnD,KAAMA,EACNsC,UAAWA,SAIjB,cAAC3C,EAAD,CAAQG,YAAY,gCC/Db4E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3C,SAASC,eAAe,SAE1B+B,M","file":"static/js/main.45c43e64.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p className=\"text-center\">Copyright@2023 | All Rights Reserved | by {props.creatername}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\r\n  let headingcolor = {\r\n    color: '\t#06b6d4',\r\n    fontWeight: '500',\r\n    fontSize: '22px'\r\n  }\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\" style={headingcolor}>\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.about}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/contact\">\r\n                Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`} >\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light' ? 'Dark' : 'Light'} Mode</label>\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\n\r\n/* here we pass default values into it from props */\r\nNavbar.defaultProps = {\r\n  title: \"TextUtils\",\r\n  about: \"About Us\",\r\n};\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n\r\n    /* ---------------Dark mode functionality---------------- */\r\n\r\n    let mystyledark1 = {\r\n        color: '#fff',\r\n        backgroundColor: 'transparent'\r\n    }\r\n    // linear-gradient(45deg, rgb(92, 92, 92) 50%, rgb(27, 27, 27) 50%)\r\n    let mystyledark2 = {\r\n        color: '#fff',\r\n        backgroundColor: '#000',\r\n        TextDecoderation: 'none',\r\n        fontWeight: 'Bold'\r\n    }\r\n\r\n\r\n    /*------------------------- light mode functionality------------- */\r\n    let mystyleLight1 = {\r\n        color: '#000',\r\n        background: 'transparent'\r\n    }\r\n\r\n    // linear-gradient(45deg, rgb(241, 241, 241) 50%, rgb(158, 232, 255) 50%)\r\n    let mystyleLight2 = {\r\n        color: '#000',\r\n        backgroundColor: '#fff',\r\n        TextDecoderation: 'none',\r\n        fontWeight: '500'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"main py-4\" id=\"main\" style={props.mode === 'dark' ? mystyledark1 : mystyleLight1}>\r\n            <h1 className=\"text-center\">About App</h1>\r\n            <div className=\"container\">\r\n                <div className=\"accordion\" id=\"accordionExample\" >\r\n\r\n                    <div className=\"accordion-item\" style={props.mode === 'dark' ? mystyledark2 : mystyleLight2}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button style={props.mode === 'dark' ? mystyledark2 : mystyleLight2} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" id=\"acc\">\r\n                                Analyse Your Text\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>Text Analyzer gives you a way to analyze your text quickly and efficiently.It let you to count word, count characters or reading time required.It has both light and dark mode for better experience.\r\n                                </strong>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"accordion-item\" style={props.mode === 'dark' ? mystyledark2 : mystyleLight2}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button style={props.mode === 'dark' ? mystyledark2 : mystyleLight2} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" id=\"acc\">\r\n                                Free To Use\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>Text Analyzer is a free characters counter tool that provided instant characters count and word count statics for a given text. Text Analyzer reports the number of words and characters. Thus it is suitable for writing text with word / characters limit.\r\n                                </strong>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"accordion-item\" style={props.mode === 'dark' ? mystyledark2 : mystyleLight2}>\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button style={props.mode === 'dark' ? mystyledark2 : mystyleLight2} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" id=\"acc\">\r\n                                Browser Compatible\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>\r\n                                    This word counter software works in any web browser such as Chrome , Firefox ,Internet Explorer ,Safari,Opera etc.\r\n                                </strong>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnChange = (event) => {\r\n    //   console.log(\"you have click on onchange\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleUpChange = () => {\r\n    if (text !== '') {\r\n      let newUppertext = text.toUpperCase();\r\n      setText(newUppertext);\r\n      props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    else {\r\n      props.showAlert(\"There's Nothing To UpperCase Into TextBox\", \"warning\");\r\n    }\r\n  }\r\n\r\n  const handleLoChange = () => {\r\n    // console.log(\"you have clicked on lowercase\");\r\n    if (text !== '') {\r\n      let newLowertext = text.toLowerCase();\r\n      setText(newLowertext);\r\n      props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n    else {\r\n      props.showAlert(\"There's Nothing To LowerCase Into TextBox\", \"warning\");\r\n    }\r\n\r\n  }\r\n\r\n  const handleClear = () => {\r\n    //   console.log(\"You have clicked on clear\");\r\n    if (text !== '') {\r\n      let cleartext = \"\";\r\n      setText(cleartext);\r\n      props.showAlert(\"Cleared the whole text\", \"danger\");\r\n    }\r\n    else {\r\n      props.showAlert(\"There's Nothing To Clear Into TextBox\", \"warning\");\r\n    }\r\n  }\r\n\r\n  const handleOnChangeAlert = () => {\r\n    alert(\"Cannot edit in preview\");\r\n  }\r\n\r\n  const handlecopyfunction = () => {\r\n    if (text !== '') {\r\n      var copyText = document.getElementById(\"text\");\r\n      copyText.select();\r\n      navigator.clipboard.writeText(copyText.value);\r\n      props.showAlert(\"Copied the text : \" + copyText.value, \"success\");\r\n    }\r\n    else {\r\n      props.showAlert(\"There's Nothing To Copy Into TextBox\", \"warning\");\r\n    }\r\n\r\n  }\r\n\r\n  const handleExtraspaces = () => {\r\n    if (text !== '') {\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"All extra spaces are cleared\", \"success\");\r\n    }\r\n    else {\r\n      props.showAlert(\"There's Nothing Remove Spaces Into TextBox\", \"warning\");\r\n    }\r\n  }\r\n\r\n\r\n  let styledark = {\r\n    color: '#fff',\r\n    backgroundColor: '#3A3B3C',\r\n    fontWeight: '400',\r\n    fontSize: '20px'\r\n  }\r\n\r\n  let stylelight = {\r\n    color: '#000',\r\n    backgroundColor: '#fff',\r\n    fontWeight: '400',\r\n    fontSize: '18px'\r\n  }\r\n\r\n  let style2dark = {\r\n    color: '#fff'\r\n  }\r\n\r\n  let style2light = {\r\n    color: '#000'\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"main\">\r\n\r\n      <div className=\"container my-5\">\r\n        <h1 className=\"text-center\" style={props.mode === 'dark' ? style2dark : style2light}>{props.heading}</h1>\r\n        <div className=\"mb-3 my-3\" >\r\n          <label htmlFor=\"text\" className=\"form-label\">\r\n            <b className=\"keebo\" style={props.mode === 'dark' ? style2dark : style2light}>Enter Your Text Here:</b>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"text\"\r\n            rows=\"7\"\r\n            style={props.mode === 'dark' ? styledark : stylelight}\r\n            value={text}\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpChange}>Convert Uppercase</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoChange}>Convert LowerCase</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-danger  mx-1 my-1\" onClick={handleClear}>Clear Text</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-success mx-1 my-1\" onClick={handlecopyfunction}>Copy To Clipboard</button>\r\n        <button disabled={text.length === 0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraspaces}>Remove Extra Spaces</button>\r\n\r\n      </div>\r\n      <div className=\"container my-4 \" style={props.mode === 'dark' ? style2dark : style2light}>\r\n        <h1>{props.summaryHead}</h1>\r\n        <p>Number of words : {text.split(\" \").filter((element) => { return element.length !== 0 }).length}</p>\r\n        <p>Number of characters : {text.length}</p>\r\n        <p>Reading Time: {0.008 * (text.split(' ').filter((element) => { return element.length !== 0 }).length)}</p>\r\n        <h3 className=\"text-center\">Preview Document</h3>\r\n        <div className=\"content\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"text\"\r\n            rows=\"3\"\r\n            value={text}\r\n            style={props.mode === 'dark' ? styledark : stylelight}\r\n            onChange={handleOnChangeAlert}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const capatalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n\r\n    /* if props.alert is not null then we will get rest code */\r\n    <div className=\"AlertBox\">\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capatalize(props.alert.type)} </strong>: {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact(props) {\r\n    let mystyle = {\r\n        color: '#fff'\r\n    }\r\n    let mystyle2 = {\r\n        color: '#000'\r\n    }\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"container my-5\">\r\n                <h1 className=\"text-center\" style={props.mode === 'dark' ? mystyle : mystyle2}>Contact Me</h1>\r\n                <div className=\"info text-center\">\r\n                    <p style={props.mode === 'dark' ? mystyle : mystyle2}>\r\n                        Developed by : Virender Pratap Singh | 3rd Year CSE @SIT Tumkur<br />\r\n                        <a href=\"mailto: virenderpratap2020@gmail.com\">Email</a>/\r\n                        <a href=\"https://github.com/virender2020\" >Github</a>\r\n                    </p>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Footer from \"./components/Footer\";\nimport Navbar from \"./components/Navbar.js\";\nimport About from \"./components/About.js\";\nimport TextForm from \"./components/TextForm.js\";\nimport Alert from \"./components/Alert.js\";\nimport Contact from \"./components/Contact\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  /* ---------Alert into website----------- */\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    /* Object created to set alert : */\n    setAlert({\n      msg: message,\n      type: type,\n    });\n\n    /* Auto dismissing the alert after some time : */\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const togglemode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.background =\n        \"linear-gradient(45deg, rgb(241, 241, 241) 50%, rgb(158, 232, 255) 50%)\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      // document.title = \"Text Analyzer - Light Mode\";\n    } else {\n      setMode(\"dark\");\n      document.body.style.background =\n        \"linear-gradient(45deg, rgb(92, 92, 92) 50%, rgb(27, 27, 27) 50%)\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      // document.title = \"Text Analyzer - Dark Mode\";\n\n      /* -------agar title chamkana ho evil app banane  ke liye setInterval-------*/\n      // setInterval(() => {\n      //   document.title = 'Text Analyzer Is Amazing';\n      // }, 1900);\n      // setInterval(() => {\n      //   document.title = 'Install Text Analyzer';\n      // }, 1500);\n    }\n  };\n\n  return (\n    <>\n      <BrowserRouter>\n        <Navbar\n          title=\"Text Analyzer\"\n          about=\"About Us\"\n          mode={mode}\n          togglemode={togglemode}\n        />\n        <Alert alert={alert} />\n        <Routes>\n          <Route path=\"/about\" element={ <About mode={mode} />}/>\n          <Route path=\"/contact\" element={  <Contact mode={mode} />}/>\n          \n          <Route path=\"/\" element={<TextForm\n              heading=\"Text Analyzer - Word Counter, Character Counter, Remove Extra Spaces\"\n              summaryHead=\"Summery Of Your Text\"\n              mode={mode}\n              showAlert={showAlert}\n            />}/>\n        </Routes>\n\n        <Footer creatername=\"Virender Pratap Singh\" />\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();"],"sourceRoot":""}